openapi: 3.0.0
info:
  title: example api
  description: example api
  version: 1.0.0
servers:
  - url: 'http://example.localhost'
tags:
  - name: observability
    description: Observability endpoints
  - name: tasks
    description: Task management endpoints
paths:
  /health:
    get:
      operationId: "getHealth"
      description: "get health"
      tags: [observability]
      responses:
        '200':
          description: Health
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Health"
        default:
          $ref:  "#/components/responses/Error"

  # Task management endpoints
  /tasks:
    get:
      operationId: "listTasks"
      summary: "List all tasks"
      description: "Retrieve a list of all tasks in the system"
      tags: [tasks]
      responses:
        '200':
          description: "List of tasks retrieved successfully"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TaskList"
        default:
          $ref: "#/components/responses/Error"

    post:
      operationId: "createTask"
      summary: "Create a new task"
      description: "Create a new task with the provided title"
      tags: [tasks]
      requestBody:
        required: true
        description: "Task creation request"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/CreateTaskRequest"
      responses:
        '201':
          description: "Task created successfully"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Task"
        default:
          $ref: "#/components/responses/Error"

  /tasks/{id}:
    delete:
      operationId: "deleteTask"
      summary: "Delete a task"
      description: "Delete a task by its unique identifier"
      tags: [tasks]
      parameters:
        - name: id
          in: path
          required: true
          description: "Unique identifier of the task to delete"
          schema:
            type: integer
            format: int64
            minimum: 1
            example: 42
      responses:
        '204':
          description: "Task deleted successfully"
        '404':
          description: "Task not found"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
        default:
          $ref: "#/components/responses/Error"

  /tasks/error:
    post:
      operationId: "generateError"
      summary: "Generate an error"
      description: "Utility endpoint for testing error handling - always returns an error response"
      tags: [tasks]
      responses:
        '200':
          description: "Should be not used, just a stub"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Error"
        # Always should return error response.
        default:
          $ref: "#/components/responses/Error"

components:
  schemas:
    # Error-related schemas.
    TraceID:
      type: string
      description: W3C trace-id
      pattern: "[[:xdigit:]]{32}"
      example: 0af7651916cd43dd8448eb211c80319c
      externalDocs:
        url: "https://www.w3.org/TR/trace-context/#trace-id"
        description: "W3C Trace Context specification: Trace ID"
    SpanID:
      type: string
      description: W3C parent-id (span)
      pattern: "[[:xdigit:]]{16}"
      example: b7ad6b7169203331
      externalDocs:
        url: "https://www.w3.org/TR/trace-context/#parent-id"
        description: "W3C Trace Context specification: Parent ID"
    Error:
      title: Structured error
      description: Error occurred while processing request
      type: object
      required:
        - errorMessage
      properties:
        errorMessage:
          type: string
          description: "Human-readable error message"
          example: "Something went wrong"
        traceID:
          $ref: "#/components/schemas/TraceID"
        spanID:
          $ref: "#/components/schemas/SpanID"

    # Health-related schemas.
    Health:
      type: object
      description: Health status
      required:
        - status
        - version
        - commit
        - buildDate
      properties:
        status:
          type: string
          description: "Health status string"
          example: "ok"
        version:
          type: string
          description: "Service version"
          example: "1.0.0"
        commit:
          type: string
          description: "Service commit"
          example: "c1b2d3f4"
        buildDate:
          type: string
          description: "Service build date"
          example: "2022-01-01T00:00:00Z"
          format: date-time

    # Task-related schemas.
    Task:
      type: object
      title: Task
      description: "A task entity with unique identifier and title"
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int64
          description: "Unique identifier for the task"
          example: 42
          minimum: 1
        title:
          type: string
          description: "Title or description of the task"
          example: "Complete API documentation"
          minLength: 1
          maxLength: 255

    TaskList:
      type: object
      title: Task List
      description: "Response containing a list of tasks"
      required:
        - tasks
      properties:
        tasks:
          type: array
          description: "Array of tasks"
          items:
            $ref: "#/components/schemas/Task"
          example:
            - id: 1
              title: "Complete API documentation"
            - id: 2
              title: "Review pull requests"

    CreateTaskRequest:
      type: object
      title: Create Task Request
      description: "Request payload for creating a new task"
      required:
        - title
      properties:
        title:
          type: string
          description: "Title or description of the task to create"
          example: "Complete API documentation"
          minLength: 1
          maxLength: 255

  responses:
    Error:
      description: Structured error response.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
