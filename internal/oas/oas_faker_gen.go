// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"time"
)

// SetFake set fake values.
func (s *CreateTaskRequest) SetFake() {
	{
		{
			s.Title = "string"
		}
	}
}

// SetFake set fake values.
func (s *Error) SetFake() {
	{
		{
			s.ErrorMessage = "string"
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
	{
		{
			s.SpanID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Health) SetFake() {
	{
		{
			s.Status = "string"
		}
	}
	{
		{
			s.Version = "string"
		}
	}
	{
		{
			s.Commit = "string"
		}
	}
	{
		{
			s.BuildDate = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *OptSpanID) SetFake() {
	var elem SpanID
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTraceID) SetFake() {
	var elem TraceID
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *SpanID) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = SpanID(unwrapped)
}

// SetFake set fake values.
func (s *Task) SetFake() {
	{
		{
			s.ID = int64(0)
		}
	}
	{
		{
			s.Title = "string"
		}
	}
}

// SetFake set fake values.
func (s *TaskList) SetFake() {
	{
		{
			s.Tasks = nil
			for i := 0; i < 0; i++ {
				var elem Task
				{
					elem.SetFake()
				}
				s.Tasks = append(s.Tasks, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *TraceID) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = TraceID(unwrapped)
}
